name: Docker Building

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build --no-cache --file Dierentuinn/Dockerfile --tag dierentuinn-name:$(date +%s) Dierentuinn

      - name: Run tests and build
        run: |
          docker run --rm \
          -v /home/runner/work/dierentuinn-devops/dierentuinn-devops:/workspace \
          -w /workspace \
          mcr.microsoft.com/dotnet/sdk:8.0 \
          bash -c "dotnet restore && dotnet build --no-restore && dotnet test --no-build --verbosity normal"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push the Docker image
        run: |
          IMAGE_NAME=dierentuinn-name:$(date +%s)
          docker tag dierentuinn-name ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME

      - name: Deploy to Server
        env:
          IMAGE_NAME: dierentuinn-name:$(date +%s)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME
            docker stop dierentuinn-container || true
            docker rm dierentuinn-container || true
            docker run -d --name dierentuinn-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME
          EOF
